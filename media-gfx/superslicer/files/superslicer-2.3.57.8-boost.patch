Index: src/libslic3r/PrintObject.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/libslic3r/PrintObject.cpp b/src/libslic3r/PrintObject.cpp
--- a/src/libslic3r/PrintObject.cpp	(revision 0d84565b5a34aa1e2b6b14d2cfb63c50449a00b1)
+++ b/src/libslic3r/PrintObject.cpp	(date 1640355448176)
@@ -15,6 +15,7 @@
 #include "Format/STL.hpp"

 #include <utility>
+#include <atomic>
 #include <boost/log/trivial.hpp>
 #include <float.h>

@@ -317,7 +318,7 @@
         // atomic counter for gui progress
         std::atomic<int> atomic_count{ 0 };
         int nb_layers_update = std::max(1, (int)m_layers.size() / 20);
-        std::chrono::time_point<std::chrono::system_clock> last_update = std::chrono::system_clock::now();
+        boost::chrono::time_point<boost::chrono::system_clock> last_update = boost::chrono::system_clock::now();

         // compare each layer to the one below, and mark those slices needing
         // one additional inner perimeter, like the top of domed objects-
@@ -394,17 +395,17 @@
             tbb::blocked_range<size_t>(0, m_layers.size()),
             [this, &atomic_count, &last_update, nb_layers_update](const tbb::blocked_range<size_t>& range) {
             for (size_t layer_idx = range.begin(); layer_idx < range.end(); ++layer_idx) {
-                std::chrono::time_point<std::chrono::system_clock> start_make_perimeter = std::chrono::system_clock::now();
+                boost::chrono::time_point<boost::chrono::system_clock> start_make_perimeter = boost::chrono::system_clock::now();
                 m_print->throw_if_canceled();
                 m_layers[layer_idx]->make_perimeters();

                 // updating progress
                 int nb_layers_done = (++atomic_count);
-                std::chrono::time_point<std::chrono::system_clock> end_make_perimeter = std::chrono::system_clock::now();
-                if (nb_layers_done % nb_layers_update == 0 || (static_cast<std::chrono::duration<double>>(end_make_perimeter - start_make_perimeter)).count() > 5) {
-                    if ((static_cast<std::chrono::duration<double>>(end_make_perimeter - last_update)).count() > 0.2) {
+                boost::chrono::time_point<boost::chrono::system_clock> end_make_perimeter = boost::chrono::system_clock::now();
+                if (nb_layers_done % nb_layers_update == 0 || (static_cast<boost::chrono::duration<double>>(end_make_perimeter - start_make_perimeter)).count() > 5) {
+                    if ((static_cast<boost::chrono::duration<double>>(end_make_perimeter - last_update)).count() > 0.2) {
                         // note: i don't care if a thread erase last_update in-between here
-                        last_update = std::chrono::system_clock::now();
+                        last_update = boost::chrono::system_clock::now();
                         m_print->set_status( int((nb_layers_done * 100) / m_layers.size()), L("Generating perimeters: layer %s / %s"), { std::to_string(nb_layers_done), std::to_string(m_layers.size()) });
                     }
                 }
@@ -581,24 +582,24 @@
             // atomic counter for gui progress
             std::atomic<int> atomic_count{ 0 };
             int nb_layers_update = std::max(1, (int)m_layers.size() / 20);
-            std::chrono::time_point<std::chrono::system_clock> last_update = std::chrono::system_clock::now();
+            boost::chrono::time_point<boost::chrono::system_clock> last_update = boost::chrono::system_clock::now();

             BOOST_LOG_TRIVIAL(debug) << "Filling layers in parallel - start";
             tbb::parallel_for(
                 tbb::blocked_range<size_t>(0, m_layers.size()),
                 [this, &adaptive_fill_octree = adaptive_fill_octree, &support_fill_octree = support_fill_octree, &atomic_count , &last_update, nb_layers_update](const tbb::blocked_range<size_t>& range) {
                 for (size_t layer_idx = range.begin(); layer_idx < range.end(); ++layer_idx) {
-                    std::chrono::time_point<std::chrono::system_clock> start_make_fill = std::chrono::system_clock::now();
+                    boost::chrono::time_point<boost::chrono::system_clock> start_make_fill = boost::chrono::system_clock::now();
                     m_print->throw_if_canceled();
                     m_layers[layer_idx]->make_fills(adaptive_fill_octree.get(), support_fill_octree.get());

                     // updating progress
                     int nb_layers_done = (++atomic_count);
-                    std::chrono::time_point<std::chrono::system_clock> end_make_fill = std::chrono::system_clock::now();
-                    if (nb_layers_done % nb_layers_update == 0 || (static_cast<std::chrono::duration<double>>(end_make_fill - start_make_fill)).count() > 5) {
-                        if ((static_cast<std::chrono::duration<double>>(end_make_fill - last_update)).count() > 0.2) {
+                    boost::chrono::time_point<boost::chrono::system_clock> end_make_fill = boost::chrono::system_clock::now();
+                    if (nb_layers_done % nb_layers_update == 0 || (static_cast<boost::chrono::duration<double>>(end_make_fill - start_make_fill)).count() > 5) {
+                        if ((static_cast<boost::chrono::duration<double>>(end_make_fill - last_update)).count() > 0.2) {
                             // note: i don't care if a thread erase last_update in-between here
-                            last_update = std::chrono::system_clock::now();
+                            last_update = boost::chrono::system_clock::now();
                             m_print->set_status( int((nb_layers_done * 100) / m_layers.size()), L("Infilling layer %s / %s"), { std::to_string(nb_layers_done), std::to_string(m_layers.size()) });
                         }
                     }
Index: src/slic3r/GUI/3DBed.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/slic3r/GUI/3DBed.cpp b/src/slic3r/GUI/3DBed.cpp
--- a/src/slic3r/GUI/3DBed.cpp	(revision 0d84565b5a34aa1e2b6b14d2cfb63c50449a00b1)
+++ b/src/slic3r/GUI/3DBed.cpp	(date 1640358788832)
@@ -15,8 +15,12 @@
 #include <GL/glew.h>

 #include <boost/algorithm/string/predicate.hpp>
+#include <boost/filesystem/fstream.hpp>
 #include <boost/filesystem/operations.hpp>
 #include <boost/log/trivial.hpp>
+#include <boost/locale.hpp>
+#include <boost/property_tree/ini_parser.hpp>
+#include <boost/property_tree/ptree.hpp>

 static const float GROUND_Z = -0.02f;

@@ -175,7 +179,7 @@
         boost::property_tree::ptree tree_colors;
         boost::filesystem::path path_colors = boost::filesystem::path(resources_dir()) / "ui_layout" / "colors.ini";
         try {
-            boost::nowide::ifstream ifs;
+            boost::filesystem::ifstream ifs;
             ifs.imbue(boost::locale::generator()("en_US.UTF-8"));
             ifs.open(path_colors.string());
             boost::property_tree::read_ini(ifs, tree_colors);
Index: src/libslic3r/PrintBase.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/libslic3r/PrintBase.cpp b/src/libslic3r/PrintBase.cpp
--- a/src/libslic3r/PrintBase.cpp	(revision 0d84565b5a34aa1e2b6b14d2cfb63c50449a00b1)
+++ b/src/libslic3r/PrintBase.cpp	(date 1640355810954)
@@ -3,6 +3,7 @@

 #include <boost/filesystem.hpp>
 #include <boost/lexical_cast.hpp>
+#include <regex>

 #include "I18N.hpp"

Index: src/slic3r/GUI/GUI_ObjectList.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/slic3r/GUI/GUI_ObjectList.cpp b/src/slic3r/GUI/GUI_ObjectList.cpp
--- a/src/slic3r/GUI/GUI_ObjectList.cpp	(revision 0d84565b5a34aa1e2b6b14d2cfb63c50449a00b1)
+++ b/src/slic3r/GUI/GUI_ObjectList.cpp	(date 1640270771332)
@@ -15,6 +15,7 @@
 #include "Selection.hpp"

 #include <boost/algorithm/string.hpp>
+#include <boost/log/trivial.hpp>
 #include "slic3r/Utils/FixModelByWin10.hpp"

 #ifdef __WXMSW__
Index: src/slic3r/GUI/Preferences.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/slic3r/GUI/Preferences.cpp b/src/slic3r/GUI/Preferences.cpp
--- a/src/slic3r/GUI/Preferences.cpp	(revision 0d84565b5a34aa1e2b6b14d2cfb63c50449a00b1)
+++ b/src/slic3r/GUI/Preferences.cpp	(date 1640270771970)
@@ -4,6 +4,7 @@
 #include "Plater.hpp"
 #include "I18N.hpp"
 #include "libslic3r/AppConfig.hpp"
+#include <boost/filesystem.hpp>
 #include <wx/notebook.h>

 namespace Slic3r {
Index: src/slic3r/GUI/PhysicalPrinterDialog.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/slic3r/GUI/PhysicalPrinterDialog.cpp b/src/slic3r/GUI/PhysicalPrinterDialog.cpp
--- a/src/slic3r/GUI/PhysicalPrinterDialog.cpp	(revision 0d84565b5a34aa1e2b6b14d2cfb63c50449a00b1)
+++ b/src/slic3r/GUI/PhysicalPrinterDialog.cpp	(date 1640270771793)
@@ -5,6 +5,7 @@
 #include <vector>
 #include <string>
 #include <boost/algorithm/string.hpp>
+#include <boost/log/trivial.hpp>

 #include <wx/sizer.h>
 #include <wx/stattext.h>
Index: src/slic3r/Utils/PresetUpdater.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/slic3r/Utils/PresetUpdater.cpp b/src/slic3r/Utils/PresetUpdater.cpp
--- a/src/slic3r/Utils/PresetUpdater.cpp	(revision 0d84565b5a34aa1e2b6b14d2cfb63c50449a00b1)
+++ b/src/slic3r/Utils/PresetUpdater.cpp	(date 1640359773236)
@@ -12,6 +12,8 @@
 #include <boost/filesystem/fstream.hpp>
 #include <boost/lexical_cast.hpp>
 #include <boost/log/trivial.hpp>
+#include <boost/property_tree/ptree.hpp>
+#include <boost/property_tree/json_parser.hpp>

 #include <wx/app.h>
 #include <wx/msgdlg.h>
Index: src/libslic3r/Format/CWS.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/libslic3r/Format/CWS.cpp b/src/libslic3r/Format/CWS.cpp
--- a/src/libslic3r/Format/CWS.cpp	(revision 0d84565b5a34aa1e2b6b14d2cfb63c50449a00b1)
+++ b/src/libslic3r/Format/CWS.cpp	(date 1640270772047)
@@ -1,6 +1,8 @@
 #include "libslic3r/Format/CWS.hpp"
 #include "libslic3r/PrintConfig.hpp"
 #include "libslic3r/Time.hpp"
+#include <boost/filesystem.hpp>
+#include <boost/log/trivial.hpp>

 namespace Slic3r {

Index: src/libslic3r/AppConfig.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/libslic3r/AppConfig.cpp b/src/libslic3r/AppConfig.cpp
--- a/src/libslic3r/AppConfig.cpp	(revision 0d84565b5a34aa1e2b6b14d2cfb63c50449a00b1)
+++ b/src/libslic3r/AppConfig.cpp	(date 1640270769975)
@@ -17,6 +17,7 @@
 #include <boost/property_tree/ptree_fwd.hpp>
 #include <boost/algorithm/string/predicate.hpp>
 #include <boost/format/format_fwd.hpp>
+#include <boost/locale/generator.hpp>
 #include <boost/log/trivial.hpp>

 #ifdef WIN32
Index: src/libslic3r/GCodeWriter.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/libslic3r/GCodeWriter.cpp b/src/libslic3r/GCodeWriter.cpp
--- a/src/libslic3r/GCodeWriter.cpp	(revision 0d84565b5a34aa1e2b6b14d2cfb63c50449a00b1)
+++ b/src/libslic3r/GCodeWriter.cpp	(date 1640270772125)
@@ -5,6 +5,8 @@
 #include <iostream>
 #include <map>
 #include <assert.h>
+#include <boost/lexical_cast.hpp>
+

 #define FLAVOR_IS(val) this->config.gcode_flavor.value == val
 #define FLAVOR_IS_NOT(val) this->config.gcode_flavor.value != val
Index: src/libslic3r/MedialAxis.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/libslic3r/MedialAxis.cpp b/src/libslic3r/MedialAxis.cpp
--- a/src/libslic3r/MedialAxis.cpp	(revision 0d84565b5a34aa1e2b6b14d2cfb63c50449a00b1)
+++ b/src/libslic3r/MedialAxis.cpp	(date 1640270772422)
@@ -9,6 +9,7 @@
 #include "polypartition.h"
 #include "poly2tri/poly2tri.h"
 #include <algorithm>
+#include <boost/log/trivial.hpp>
 #include <cassert>
 #include <list>

Index: src/slic3r/GUI/CalibrationAbstractDialog.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/slic3r/GUI/CalibrationAbstractDialog.cpp b/src/slic3r/GUI/CalibrationAbstractDialog.cpp
--- a/src/slic3r/GUI/CalibrationAbstractDialog.cpp	(revision 0d84565b5a34aa1e2b6b14d2cfb63c50449a00b1)
+++ b/src/slic3r/GUI/CalibrationAbstractDialog.cpp	(date 1640270771704)
@@ -8,6 +8,7 @@
 #include <wx/scrolwin.h>
 #include <wx/display.h>
 #include <wx/file.h>
+#include <boost/filesystem.hpp>

 #if ENABLE_SCROLLABLE
 static wxSize get_screen_size(wxWindow* window)
Index: src/libslic3r/GCode/AvoidCrossingPerimeters.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/libslic3r/GCode/AvoidCrossingPerimeters.cpp b/src/libslic3r/GCode/AvoidCrossingPerimeters.cpp
--- a/src/libslic3r/GCode/AvoidCrossingPerimeters.cpp	(revision 0d84565b5a34aa1e2b6b14d2cfb63c50449a00b1)
+++ b/src/libslic3r/GCode/AvoidCrossingPerimeters.cpp	(date 1640270771532)
@@ -9,6 +9,7 @@
 #include "../SVG.hpp"
 #include "AvoidCrossingPerimeters.hpp"

+#include <boost/log/trivial.hpp>
 #include <numeric>
 #include <unordered_set>

Index: src/libslic3r/PlaceholderParser.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/libslic3r/PlaceholderParser.cpp b/src/libslic3r/PlaceholderParser.cpp
--- a/src/libslic3r/PlaceholderParser.cpp	(revision 0d84565b5a34aa1e2b6b14d2cfb63c50449a00b1)
+++ b/src/libslic3r/PlaceholderParser.cpp	(date 1640270771618)
@@ -6,6 +6,10 @@
 #include <iomanip>
 #include <sstream>
 #include <map>
+#include <regex>
+
+#include <boost/log/trivial.hpp>
+
 #ifdef _MSC_VER
     #include <stdlib.h>  // provides **_environ
 #else
Index: src/libslic3r/GCode.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/libslic3r/GCode.cpp b/src/libslic3r/GCode.cpp
--- a/src/libslic3r/GCode.cpp	(revision 0d84565b5a34aa1e2b6b14d2cfb63c50449a00b1)
+++ b/src/libslic3r/GCode.cpp	(date 1640270771438)
@@ -19,6 +19,7 @@
 #include <math.h>
 #include <string_view>
 #include <map>
+#include <unordered_set>

 #include <boost/algorithm/string.hpp>
 #include <boost/algorithm/string/find.hpp>
Index: src/slic3r/GUI/Search.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/slic3r/GUI/Search.cpp b/src/slic3r/GUI/Search.cpp
--- a/src/slic3r/GUI/Search.cpp	(revision 0d84565b5a34aa1e2b6b14d2cfb63c50449a00b1)
+++ b/src/slic3r/GUI/Search.cpp	(date 1640359567758)
@@ -2,6 +2,7 @@

 #include <cstddef>
 #include <string>
+#include <regex>
 #include <boost/algorithm/string.hpp>
 #include <boost/optional.hpp>
 #include <boost/nowide/convert.hpp>
